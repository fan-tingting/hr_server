<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fanfan.hr.mapper.EmployeeSalMapper" >
  <resultMap id="BaseResultMap" type="com.fanfan.hr.pojo.EmployeeSal" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="eid" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="salarydate" jdbcType="DATE" javaType="java.util.Date" />
      <arg column="beforesalary" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="aftersalary" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="reason" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="remark" jdbcType="VARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, eid, salarydate, beforesalary, aftersalary, reason, remark
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from employee_sal
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from employee_sal
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.fanfan.hr.pojo.EmployeeSal" >
    insert into employee_sal (id, eid, salarydate, 
      beforesalary, aftersalary, reason, 
      remark)
    values (#{id,jdbcType=INTEGER}, #{eid,jdbcType=INTEGER}, #{salarydate,jdbcType=DATE}, 
      #{beforesalary,jdbcType=INTEGER}, #{aftersalary,jdbcType=INTEGER}, #{reason,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.fanfan.hr.pojo.EmployeeSal" >
    insert into employee_sal
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="eid != null" >
        eid,
      </if>
      <if test="salarydate != null" >
        salarydate,
      </if>
      <if test="beforesalary != null" >
        beforesalary,
      </if>
      <if test="aftersalary != null" >
        aftersalary,
      </if>
      <if test="reason != null" >
        reason,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="eid != null" >
        #{eid,jdbcType=INTEGER},
      </if>
      <if test="salarydate != null" >
        #{salarydate,jdbcType=DATE},
      </if>
      <if test="beforesalary != null" >
        #{beforesalary,jdbcType=INTEGER},
      </if>
      <if test="aftersalary != null" >
        #{aftersalary,jdbcType=INTEGER},
      </if>
      <if test="reason != null" >
        #{reason,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.fanfan.hr.pojo.EmployeeSal" >
    update employee_sal
    <set >
      <if test="eid != null" >
        eid = #{eid,jdbcType=INTEGER},
      </if>
      <if test="salarydate != null" >
        salarydate = #{salarydate,jdbcType=DATE},
      </if>
      <if test="beforesalary != null" >
        beforesalary = #{beforesalary,jdbcType=INTEGER},
      </if>
      <if test="aftersalary != null" >
        aftersalary = #{aftersalary,jdbcType=INTEGER},
      </if>
      <if test="reason != null" >
        reason = #{reason,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fanfan.hr.pojo.EmployeeSal" >
    update employee_sal
    set eid = #{eid,jdbcType=INTEGER},
      salarydate = #{salarydate,jdbcType=DATE},
      beforesalary = #{beforesalary,jdbcType=INTEGER},
      aftersalary = #{aftersalary,jdbcType=INTEGER},
      reason = #{reason,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="getEmpSalList" parameterType="com.fanfan.hr.common.EmpSalPageInputDTO"
      resultType="com.fanfan.hr.pojo.EmployeeSal">
        SELECT
            e.`name`,
            es.id,
            es.eid,
            es.salarydate salaryDate,
            es.beforesalary beforesalary,
            es.aftersalary afterSalary,
            es.reason,
            es.remark
        FROM
            employee_sal es
        LEFT JOIN employee e ON e.id = es.eid
        <if test="status != null">
          where 1 = 1
          <if test="status == true">
            and es.beforesalary is not null
          </if>
          <if test="status == false">
            and es.beforesalary is null
          </if>
        </if>
        limit #{beginPage,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}
  </select>
  <select id="getAllEmpSalCount" parameterType="com.fanfan.hr.common.EmpSalPageInputDTO"
    resultType="java.lang.Integer">
    SELECT
        count(*)
    FROM
    employee_sal es
    LEFT JOIN employee e ON e.id = es.eid
    <if test="status != null">
      where 1 = 1
      <if test="status == true">
        and es.beforesalary is not null
      </if>
      <if test="status == false">
        and es.beforesalary is null
      </if>
    </if>
  </select>
</mapper>